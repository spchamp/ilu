#! -*- Python -*-
# $Id: sprogram.py.dist,v 1.3 1999/08/03 01:59:02 janssen Exp $
# BeginILUCopyright

# Copyright (c) 1991-1999 Xerox Corporation.  All Rights Reserved.

# Unlimited use, reproduction, modification, and distribution of this
# software and modified versions thereof is permitted.  Permission is
# granted to make derivative works from this software or a modified
# version thereof.  Any copy of this software, a modified version
# thereof, or a derivative work must include both the above copyright
# notice of Xerox Corporation and this paragraph.  Any distribution of
# this software, a modified version thereof, or a derivative work must
# comply with all applicable United States export control laws.  This
# software is made available AS IS, and XEROX CORPORATION DISCLAIMS ALL
# WARRANTIES, EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE, AND NOTWITHSTANDING ANY OTHER PROVISION CONTAINED HEREIN, ANY
# LIABILITY FOR DAMAGES RESULTING FROM THE SOFTWARE OR ITS USE IS
# EXPRESSLY DISCLAIMED, WHETHER ARISING IN CONTRACT, TORT (INCLUDING
# NEGLIGENCE) OR STRICT LIABILITY, EVEN IF XEROX CORPORATION IS ADVISED
# OF THE POSSIBILITY OF SUCH DAMAGES.

# EndILUCopyright

import relocate, relocate__skel, ilu, getopt, socket, sys

program = "relocate server"
mainloopvar = None

class Foo (relocate__skel.Foo):
	def __init__(self, server, ih):
		self.IluInstHandle = ih
		self.IluServer = server

	def dummy (self):
		return Foo(self.IluServer, None)

def main(argv):

	sys.stderr.write("sprogram:  in sprogram...\n");

	program = argv[0]
	sid = argv[1]
	ih = argv[2]
	mgr_sbh = argv[3]
	publicPinfo = argv[4]
	publicTinfo = argv[5:]

	# first, create our server, with a 'private' port, using "iiop"
	server = ilu.Server(sid, ("iiop", ("tcp_0_0",), 1), None, None)
	# then, get the real cinfo of that private port
	nativePinfo, nativeTinfo = server.nativeCInfo(1)
	# mask the real cinfo with the 'public' cinfo
	server.addCInfo (publicPinfo, publicTinfo)
	# now create an object
	sys.stderr.write("sprogram:  creating object...\n");
	dummy = Foo(server, ih)
	# ok, we're ready to respond to a request -- tell the manager
	# by registering our real cinfo
	mgr = ilu.ObjectOfSBH(relocate.RelocationManager, mgr_sbh)
	sys.stderr.write("sprogram:  mgr is " + str(mgr) + "...\n");
	mgr.RegisterRealCinfo(sid, nativePinfo, nativeTinfo)
	sys.stderr.write("sprogram:  returned from registration\n");

	# print the SBH of the dummy for fun...
	print dummy.IluSBH()
	# ...and start handling requests
	mainloopvar = ilu.CreateLoopHandle()
	ilu.RunMainLoop(mainloopvar)

if __name__ == "__main__":
	import sys
	main(sys.argv)
