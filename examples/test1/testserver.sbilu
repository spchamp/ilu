#!/bin/sh
# $Id: testserver.sbilu,v 1.7 1999/08/03 01:52:18 janssen Exp $
# BeginILUCopyright

# Copyright (c) 1991-1999 Xerox Corporation.  All Rights Reserved.

# Unlimited use, reproduction, modification, and distribution of this
# software and modified versions thereof is permitted.  Permission is
# granted to make derivative works from this software or a modified
# version thereof.  Any copy of this software, a modified version
# thereof, or a derivative work must include both the above copyright
# notice of Xerox Corporation and this paragraph.  Any distribution of
# this software, a modified version thereof, or a derivative work must
# comply with all applicable United States export control laws.  This
# software is made available AS IS, and XEROX CORPORATION DISCLAIMS ALL
# WARRANTIES, EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE, AND NOTWITHSTANDING ANY OTHER PROVISION CONTAINED HEREIN, ANY
# LIABILITY FOR DAMAGES RESULTING FROM THE SOFTWARE OR ITS USE IS
# EXPRESSLY DISCLAIMED, WHETHER ARISING IN CONTRACT, TORT (INCLUDING
# NEGLIGENCE) OR STRICT LIABILITY, EVEN IF XEROX CORPORATION IS ADVISED
# OF THE POSSIBILITY OF SUCH DAMAGES.

# EndILUCopyright

logfile=/tmp/ilutestlog$$

ILU_BINDING_SERVICE="test$$:`hostname`:29939"
export ILU_BINDING_SERVICE
echo "ILU_BINDING_SERVICE is $ILU_BINDING_SERVICE..."

ILU_DEBUG="most" ; export ILU_DEBUG

if test -x ../../etc/sbserver/ilusb ; then
  echo "Starting simple binding service (and waiting a bit for it to start up)..."
  ../../etc/sbserver/ilusb -f ${logfile}-sblog >${logfile}-ilusb 2>&1 &
  sbPID=$!
  sleep 10
else
  echo "No simple binding server executable.  Failed test."
  exit 1
fi

if test -x ./server ; then
  echo "Starting server (and waiting a bit for it to start up)..."
  ./server -errexit >${logfile}-server 2>&1 &
  serverPID=$!
  sleep 10
else
  echo "No server executable.  Failed test."
  kill $sbPID ; rm -rf ${logfile}-sblog ${logfile}-ilusb
  exit 1
fi

echo "Running client against server..."
./client >${logfile}-client 2>&1
clientstatus=$?
if test $clientstatus != 0; then
  echo "*** Client program reports errors:  logfiles are ${logfile}-{sblog,ilusb,client,server}"
else
  echo "Client run successful."
  rm -f ${logfile}-server ${logfile}-client
fi
echo "Killing server..."
kill $serverPID
echo "Killing simple binding server..."
kill $sbPID ; sleep 2 ; rm -rf ${logfile}-sblog ${logfile}-ilusb
echo "Exiting with status $clientstatus."
exit $clientstatus
