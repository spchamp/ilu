typedef union{
  refany any; /*unspecified*/
  IDLDefinition definition;
  list definition_list;
  IDLName name;
  list name_list;
  IDLValue value;
  IDLType type;
  boolean flag;
  list string_list;
  list caselabel_list;
  ArgDirection inout;
  char opname;
  IDLCase caselabel;
} YYSTYPE;
#define	IDENT	258
#define	BOOL_FALSE	259
#define	BOOL_TRUE	260
#define	CHAR_L	261
#define	FLOAT_L	262
#define	INTEGER_L	263
#define	STRING_L	264
#define	FIXED_PT_L	265
#define	ONEWAY	266
#define	VOID_T	267
#define	IN	268
#define	OUT	269
#define	INOUT	270
#define	PRAGMA_ID	271
#define	PRAGMA_VERSION	272
#define	PRAGMA_PREFIX	273
#define	ANY_T	274
#define	ATTRIBUTE	275
#define	BOOLEAN_T	276
#define	CASE	277
#define	CHAR_T	278
#define	CONST	279
#define	CONTEXT	280
#define	DEFAULT	281
#define	DOUBLE_T	282
#define	ENUM	283
#define	EXCEPTION	284
#define	FIXED	285
#define	FLOAT_T	286
#define	INTERFACE	287
#define	LONG_T	288
#define	LSHIFT	289
#define	MODULE	290
#define	OBJECT_T	291
#define	NATIVE	292
#define	OCTET_T	293
#define	RAISES	294
#define	READONLY	295
#define	RSHIFT	296
#define	SCOPE	297
#define	SEQUENCE	298
#define	SHORT_T	299
#define	STRING_T	300
#define	STRUCT	301
#define	SWITCH	302
#define	TYPEDEF	303
#define	UNION	304
#define	UNSIGNED_T	305
#define	WCHAR_T	306
#define	WSTRING_T	307
#define	ABSTRACT	308
#define	CUSTOM	309
#define	FACTORY	310
#define	PRIVATE	311
#define	PUBLIC	312
#define	SUPPORTS	313
#define	TRUNCATABLE	314
#define	VALUEBASE	315
#define	VALUETYPE	316


extern YYSTYPE idllval;
